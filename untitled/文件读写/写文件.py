# coding=utf-8
'''
过程：
1、打开文件
2、写入文件内容
3、关闭文件

'''

'''
1、打开文件
open(path,flag[,encoding,errors])
path:要打开文件的路径
flag:打开方式
r   以只读的方式打开文件，文件的描述符放在文件的开头
rb  以二进制的格式打开一个文件用于只读，文件的描述符放在文件的开头
r+  以读写的方式打开文件，文件的描述符放在文件的开头

w   打开一个文件只用于写入，如果该文件已经存在则覆盖，如果不存在则创建新文件
wb  打开一个文件只用于写入二进制，如果该文件已经存在则覆盖，如果不存在则创建新文件
w+  打开一个文件只用于读写，如果该文件已经存在则覆盖，如果不存在则创建新文件
a   打开一个文件用于追加，如果该文件存在，文件描述符将会放在文件末尾，如果不存在则创建新文件
a+  打开一个文件用于读写，如果该文件存在，文件描述符将会放在文件末尾（此时只能写入，读取是没有任何数据的），
如果不存在则创建新文件 

encoding: 编码方式  utf-8
errors: 错误处理  ignore

'''

# 示例1 --打开文件
path = r"E:\study\untitled\file3.txt"
f = open(path, "w")
print("*****")



'''
2、写入文件内容
'''
#1 将数据写入内存缓冲区  并没有写入到文件中
f.write("Linuxcao is a gooood man!!!!\n")

#2 刷新缓冲区
# 直接把内部缓冲区的数据立刻写入文件，而不是被动的等待（文件关闭时）自动刷新缓冲区写入
f.flush()


'''
3、关闭文件
'''
f.close()


print("**************")
#示例1--一个完整的标准过程
try:
    f1 = open(path,"w")
    f1.write("Linuxcao is a handsome man!!")
finally:
    if f1:
        f1.close()

print("$$$$$$$$$$$$$")
#示例2--示例1的缩减版本
#打开文件之后，无论成功或者失败，with都会自动关闭文件
with open(path,"a") as f2:
    f2.write("Rony is a nice girl!")